!function(){"use strict";try{self["workbox:core:5.1.1"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:precaching:5.1.1"]&&_()}catch(e){}const s=[],n={get:()=>s,add(e){s.push(...e)}},c={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},a=e=>[c.prefix,e,c.suffix].filter(e=>e&&e.length>0).join("-"),r=e=>e||a(c.precache),i=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),""),o=new Set;const h=(e,t)=>e.filter(e=>t in e),l=async({request:e,mode:t,plugins:s=[]})=>{const n=h(s,"cacheKeyWillBeUsed");let c=e;for(const e of n)c=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:c}),"string"==typeof c&&(c=new Request(c));return c},u=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:c=[]})=>{const a=await self.caches.open(e),r=await l({plugins:c,request:t,mode:"read"});let i=await a.match(r,n);for(const t of c)if("cachedResponseWillBeUsed"in t){const c=t.cachedResponseWillBeUsed;i=await c.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:i,request:r})}return i},f=async({cacheName:e,request:s,response:n,event:c,plugins:a=[],matchOptions:r})=>{const f=await l({plugins:a,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:i(f.url)});const d=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let c=t,a=!1;for(const t of n)if("cacheWillUpdate"in t){a=!0;const n=t.cacheWillUpdate;if(c=await n.call(t,{request:e,response:c,event:s}),!c)break}return a||(c=c&&200===c.status?c:void 0),c||null})({event:c,plugins:a,response:n,request:f});if(!d)return;const p=await self.caches.open(e),w=h(a,"cacheDidUpdate"),y=w.length>0?await u({cacheName:e,matchOptions:r,request:f}):null;try{await p.put(f,d)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of o)await e()}(),e}for(const t of w)await t.cacheDidUpdate.call(t,{cacheName:e,event:c,oldResponse:y,newResponse:d,request:f})},d=async({request:e,fetchOptions:s,event:n,plugins:c=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const a=h(c,"fetchDidFail"),r=a.length>0?e.clone():null;try{for(const t of c)if("requestWillFetch"in t){const s=t.requestWillFetch,c=e.clone();e=await s.call(t,{request:c,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const i=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of c)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:i,response:t}));return t}catch(e){for(const t of a)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:r.clone(),request:i.clone()});throw e}};let p;async function w(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},c=t?t(n):n,a=function(){if(void 0===p){const e=new Response("");if("body"in e)try{new Response(e.body),p=!0}catch(e){p=!1}p=!1}return p}()?s.body:await s.blob();return new Response(a,c)}function y(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const c=new URL(n,location.href),a=new URL(n,location.href);return c.searchParams.set("__WB_REVISION__",s),{cacheKey:c.href,url:a.href}}class g{constructor(e){this._cacheName=r(e),this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:c}=y(n),a="string"!=typeof n&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(c)&&this._urlsToCacheKeys.get(c)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(c),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:c});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(c,e),this._urlsToCacheModes.set(c,a),s.length>0){const e="Workbox is precaching URLs without revision "+`info: ${s.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],c=await self.caches.open(this._cacheName),a=await c.keys(),r=new Set(a.map(e=>e.url));for(const[e,t]of this._urlsToCacheKeys)r.has(t)?n.push(e):s.push({cacheKey:t,url:e});const i=s.map(({cacheKey:s,url:n})=>{const c=this._cacheKeysToIntegrities.get(s),a=this._urlsToCacheModes.get(n);return this._addURLToCache({cacheKey:s,cacheMode:a,event:e,integrity:c,plugins:t,url:n})});return await Promise.all(i),{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this._cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const c of t)s.has(c.url)||(await e.delete(c),n.push(c.url));return{deletedURLs:n}}async _addURLToCache({cacheKey:e,url:s,cacheMode:n,event:c,plugins:a,integrity:r}){const i=new Request(s,{integrity:r,cache:n,credentials:"same-origin"});let o,h=await d({event:c,plugins:a,request:i});for(const e of a||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:c,request:i,response:h}):h.status<400))throw new t("bad-precaching-response",{url:s,status:h.status});h.redirected&&(h=await w(h)),await f({event:c,plugins:a,response:h,request:e===s?i:new Request(e),cacheName:this._cacheName,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this._cacheName)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this._cacheName,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),c=new Request(e);return()=>n({request:c})}}let m;const R=()=>(m||(m=new g),m);const U=(e,t)=>{const s=R().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:c}={}){const a=new URL(e,location.href);a.hash="",yield a.href;const r=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(a,t);if(yield r.href,s&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=s,yield e.href}if(n){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(c){const e=c({url:a});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let v=!1;function L(e){v||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const c=r();self.addEventListener("fetch",a=>{const r=U(a.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!r)return;let i=self.caches.open(c).then(e=>e.match(r)).then(e=>e||fetch(r));a.respondWith(i)})})(e),v=!0)}const q=e=>{const t=R(),s=n.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},K=e=>{const t=R();e.waitUntil(t.activate())};function T(e,t){!function(e){R().addToCacheList(e),e.length>0&&(self.addEventListener("install",q),self.addEventListener("activate",K))}(e),L(t)}T([{"revision":"2a8b87c5d94e9c85b202d176988f08f3","url":"index.html"},{"revision":"dcf2fa5ba6be776c2d291383600dd522","url":"ai.js"},{"revision":"9a939319d841934798fb4bb584ccac33","url":"bundle-noimport.js"},{"revision":"88c9b5fac56d607156e85bc4a161684d","url":"bundle.js"}]),T([{url:"https://unpkg.com/systemjs@2.0.0/dist/s.min.js",revision:null}])}();
//# sourceMappingURL=sw.js.map
